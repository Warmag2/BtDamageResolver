version: "3"

services:  
  # Battletech Damage Resolver (orleans silo)
  resolver:
    container_name: resolver
    hostname: resolver
    image: resolver:latest
    environment:
      RESOLVER_ENVIRONMENT: Release
      ClusterOptions__ConnectionString: "User ID=${RESOLVER_USER:?err};Password=${RESOLVER_PASSWORD:?err};Host=orleansdb;Port=5432;Database=BtDamageResolver;SSL Mode=Require;Trust Server Certificate=true;"
      CommunicationOptions__ConnectionString: "redis:6379,password=${RESOLVER_PASSWORD:?err}"
    networks:
      - resolvernet
    depends_on:
      - orleansdb   # Data source
      - redis       # Communication bus
    restart: on-failure

  # Data Importer
  resolverdataimporter:
    container_name: resolverdataimporter
    hostname: resolverdataimporter
    image: resolverdataimporter:latest
    environment:
      RESOLVER_ENVIRONMENT: Release
      ClusterOptions__ConnectionString: "User ID=${RESOLVER_USER:?err};Password=${RESOLVER_PASSWORD:?err};Host=orleansdb;Port=5432;Database=BtDamageResolver;SSL Mode=Require;Trust Server Certificate=true;"
    networks:
      - resolvernet
    depends_on:
      - resolver

  # Battletech Damage Resolver (blazor client)
  resolverclient:
    container_name: resolverclient
    hostname: resolverclient
    image: resolverclient:latest
    environment:
      RESOLVER_ENVIRONMENT: Release
      CommunicationOptions__ConnectionString: "redis:6379,password=${RESOLVER_PASSWORD:?err}"
    ports:
      - 8787:80
    networks:
      - resolvernet
    depends_on:
      - resolver    # No sense to start until the server is up
    restart: on-failure

  # Postgresql for Orleans
  orleansdb:
    container_name: orleansdb
    hostname: orleansdb
    image: orleansdb:latest
    environment:
      POSTGRES_DB: BtDamageResolver
      POSTGRES_USER: "${RESOLVER_USER:?err}"
      POSTGRES_PASSWORD: "${RESOLVER_PASSWORD:?err}"
    ports:
      - 65432:5432
    volumes:
      - orleansdb-data:/var/lib/postgresql/data
    restart: on-failure
    networks:
      - resolvernet

  # Grafana
  grafana:
    container_name: grafana
    image: resolvergrafana:latest
    environment:
      GF_SECURITY_ADMIN_USER: "${RESOLVER_USER:?err}"
      GF_SECURITY_ADMIN_PASSWORD: "${RESOLVER_PASSWORD:?err}"
      DATASOURCE_USER: "${RESOLVER_USER:?err}"
      DATASOURCE_PASSWORD: "${RESOLVER_PASSWORD:?err}"
    ports:
      - "63000:3000"
    volumes:
      - grafana-data:/var/lib/grafana
    networks:
      - resolvernet
    depends_on:
      - orleansdb # Data source
    restart: on-failure

  # Redis
  redis:
    container_name: redis
    image: resolverredis:latest
    environment:
      REDIS_PASSWORD: "${RESOLVER_PASSWORD:?err}"
    ports:
      - "63790:6379"
    volumes:
      - redis-data:/data
    networks:
      - resolvernet
    restart: on-failure


networks:
  resolvernet:

volumes:
  grafana-data:
  orleansdb-data:
  redis-data:
