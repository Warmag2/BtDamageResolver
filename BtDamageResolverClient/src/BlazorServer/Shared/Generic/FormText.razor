<input class="resolver_input resolver_input_text resolver_wide @(_erraneousInput ? "error" : string.Empty) @(ComparisonTimeStamp > _updateTimeStamp ? "reminder" : "")" type="text" disabled="@Disabled" @bind="SelectedOptionInternal">

@code
{
    private string _selectedOption;
    private bool _erraneousInput;
    private DateTime _updateTimeStamp = DateTime.MinValue;

    [Parameter]
    public string SelectedOption { get; set; }

    [Parameter]
    public bool Disabled { get; set; }

    [Parameter]
    public DateTime ComparisonTimeStamp { get; set; }

    [Parameter]
    public EventCallback<string> OnChanged { get; set; }

    [Parameter]
    public Func<List<string>> InvalidOptionGenerator { get; set; }

    public string SelectedOptionInternal
    {
        get => _selectedOption;
        set
        {
            if (InvalidOptionGenerator == null)
            {
                _selectedOption = value;
                _updateTimeStamp = DateTime.UtcNow;
                OnChanged.InvokeAsync(value);
            }
            else
            {
                _selectedOption = value;
                _updateTimeStamp = DateTime.UtcNow;

                if (!InvalidOptionGenerator().Contains(value))
                {
                    OnChanged.InvokeAsync(value);
                    _erraneousInput = false;
                }
                else
                {
                    _erraneousInput = true;
                }
            }

        }
    }

    protected override void OnInitialized()
    {
        SelectedOptionInternal = SelectedOption;
        _updateTimeStamp = DateTime.MinValue;
    }
}