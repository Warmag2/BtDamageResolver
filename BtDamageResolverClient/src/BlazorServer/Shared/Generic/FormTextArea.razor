<textarea rows="10" cols="88" class="resolver_input resolver_input_text resolver_wide @(_erraneousInput ? "error" : string.Empty) @(ComparisonTimeStamp > _updateTimeStamp ? "reminder" : "")" disabled="@Disabled" @bind="TextInternal">
    @TextInternal
</textarea>

@code
{
    private string _text;
    private bool _erraneousInput;
    private DateTime _updateTimeStamp = DateTime.MinValue;

    [Parameter]
    public string Text { get; set; }

    [Parameter]
    public bool Disabled { get; set; }

    [Parameter]
    public DateTime ComparisonTimeStamp { get; set; }

    [Parameter]
    public EventCallback<string> OnChanged { get; set; }

    [Parameter]
    public Func<List<string>> InvalidOptionGenerator { get; set; }

    public string TextInternal
    {
        get => _text;
        set
        {
            if (InvalidOptionGenerator == null)
            {
                _text = value;
                _updateTimeStamp = DateTime.UtcNow;
                OnChanged.InvokeAsync(value);
            }
            else
            {
                _text = value;
                _updateTimeStamp = DateTime.UtcNow;

                if (!InvalidOptionGenerator().Any(o => o.Equals(value)))
                {
                    OnChanged.InvokeAsync(value);
                    _erraneousInput = false;
                }
                else
                {
                    _erraneousInput = true;
                }
            }

        }
    }

    protected override void OnInitialized()
    {
        TextInternal = Text;
        _updateTimeStamp = DateTime.MinValue;
    }
}